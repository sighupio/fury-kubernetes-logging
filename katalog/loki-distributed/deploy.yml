# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

---
# Source: loki-distributed/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loki-distributed
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: loki-distributed/templates/gateway/configmap-gateway.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-distributed-gateway
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: gateway
data:
  nginx.conf: |
    worker_processes  5;  ## Default: 1
    error_log  /dev/stderr;
    pid        /tmp/nginx.pid;
    worker_rlimit_nofile 8192;

    events {
      worker_connections  4096;  ## Default: 1024
    }

    http {
      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;

      proxy_http_version    1.1;

      default_type application/octet-stream;
      log_format   main '$remote_addr - $remote_user [$time_local]  $status '
            '"$request" $body_bytes_sent "$http_referer" '
            '"$http_user_agent" "$http_x_forwarded_for"';
      access_log   /dev/stderr  main;

      sendfile     on;
      tcp_nopush   on;
      resolver kube-dns.kube-system.svc.cluster.local;

      server {
        listen             8080;

        location = / {
          return 200 'OK';
          auth_basic off;
          access_log off;
        }

        location = /api/prom/push {
          set $api_prom_push_backend http://loki-distributed-distributor.logging.svc.cluster.local;
          proxy_pass       $api_prom_push_backend:3100$request_uri;
          proxy_http_version 1.1;
        }

        location = /api/prom/tail {
          set $api_prom_tail_backend http://loki-distributed-querier.logging.svc.cluster.local;
          proxy_pass       $api_prom_tail_backend:3100$request_uri;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_http_version 1.1;
        }

        # Ruler
        location ~ /prometheus/api/v1/alerts.* {
          proxy_pass       http://loki-distributed-ruler.logging.svc.cluster.local:3100$request_uri;
        }
        location ~ /prometheus/api/v1/rules.* {
          proxy_pass       http://loki-distributed-ruler.logging.svc.cluster.local:3100$request_uri;
        }
        location ~ /api/prom/rules.* {
          proxy_pass       http://loki-distributed-ruler.logging.svc.cluster.local:3100$request_uri;
        }
        location ~ /api/prom/alerts.* {
          proxy_pass       http://loki-distributed-ruler.logging.svc.cluster.local:3100$request_uri;
        }

        location ~ /api/prom/.* {
          set $api_prom_backend http://loki-distributed-query-frontend-headless.logging.svc.cluster.local;
          proxy_pass       $api_prom_backend:3100$request_uri;
          proxy_http_version 1.1;
        }

        location = /loki/api/v1/push {
          set $loki_api_v1_push_backend http://loki-distributed-distributor.logging.svc.cluster.local;
          proxy_pass       $loki_api_v1_push_backend:3100$request_uri;
          proxy_http_version 1.1;
        }

        location = /loki/api/v1/tail {
          set $loki_api_v1_tail_backend http://loki-distributed-querier.logging.svc.cluster.local;
          proxy_pass       $loki_api_v1_tail_backend:3100$request_uri;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_http_version 1.1;
        }

        location ~ /loki/api/.* {
          set $loki_api_backend http://loki-distributed-query-frontend-headless.logging.svc.cluster.local;
          proxy_pass       $loki_api_backend:3100$request_uri;
          proxy_http_version 1.1;
        }
      }
    }
---
# Source: loki-distributed/templates/runtime-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-distributed-runtime
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
data:
  runtime.yaml: |

    {}
---
# Source: loki-distributed/templates/compactor/persistentvolumeclaim-compactor.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-loki-distributed-compactor
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: compactor
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "10Gi"
---
# Source: loki-distributed/templates/compactor/service-compactor.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-distributed-compactor
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: compactor
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/component: compactor
---
# Source: loki-distributed/templates/distributor/service-distributor.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-distributed-distributor
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: distributor
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/component: distributor
---
# Source: loki-distributed/templates/gateway/service-gateway.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-stack
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: gateway
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/component: gateway
---
# Source: loki-distributed/templates/ingester/service-ingester-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-distributed-ingester-headless
  labels:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/component: ingester
    prometheus.io/service-monitor: "false"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/component: ingester
---
# Source: loki-distributed/templates/ingester/service-ingester.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-distributed-ingester
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ingester
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/component: ingester
---
# Source: loki-distributed/templates/querier/service-querier-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-distributed-querier-headless
  labels:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/component: querier
    prometheus.io/service-monitor: "false"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/component: querier
---
# Source: loki-distributed/templates/querier/service-querier.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-distributed-querier
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: querier
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/component: querier
---
# Source: loki-distributed/templates/query-frontend/service-query-frontend-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-distributed-query-frontend-headless
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query-frontend
    prometheus.io/service-monitor: "false"
spec:
  clusterIP: None
  type: ClusterIP
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
    - name: grpclb
      port: 9096
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/component: query-frontend
---
# Source: loki-distributed/templates/query-frontend/service-query-frontend.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-distributed-query-frontend
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query-frontend
spec:
  type: ClusterIP
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
    - name: grpclb
      port: 9096
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/component: query-frontend
---
# Source: loki-distributed/templates/service-memberlist.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-distributed-memberlist
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp
      port: 7946
      targetPort: http-memberlist
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/part-of: memberlist
---
# Source: loki-distributed/templates/compactor/deployment-compactor.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-distributed-compactor
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: compactor
spec:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/component: compactor
  template:
    metadata:
      annotations:
        checksum/config: 8de3a2b4ecfe3365b8029218127cb8c1b3016a60c4ef39b9ac95c26776e8b4cb
      labels:
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/instance: loki-distributed
        app.kubernetes.io/component: compactor
        app.kubernetes.io/part-of: memberlist
    spec:
      serviceAccountName: loki-distributed
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 30
      containers:
        - name: compactor
          image: docker.io/grafana/loki:2.7.3
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=compactor
            - -boltdb.shipper.compactor.working-directory=/var/loki/compactor
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: http-memberlist
              containerPort: 7946
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 300
          volumeMounts:
            - name: temp
              mountPath: /tmp
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /var/loki-distributed-runtime
            - name: data
              mountPath: /var/loki
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 1024Mi
      volumes:
        - name: temp
          emptyDir: {}
        - name: config
          secret:
            secretName: loki-distributed
        - name: runtime-config
          configMap:
            name: loki-distributed-runtime
        - name: data
          persistentVolumeClaim:
            claimName: data-loki-distributed-compactor
---
# Source: loki-distributed/templates/distributor/deployment-distributor.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-distributed-distributor
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: distributor
    app.kubernetes.io/part-of: memberlist
spec:
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/component: distributor
  template:
    metadata:
      annotations:
        checksum/config: 8de3a2b4ecfe3365b8029218127cb8c1b3016a60c4ef39b9ac95c26776e8b4cb
      labels:
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/instance: loki-distributed
        app.kubernetes.io/component: distributor
        app.kubernetes.io/part-of: memberlist
    spec:
      serviceAccountName: loki-distributed

      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 30
      containers:
        - name: distributor
          image: docker.io/grafana/loki:2.7.3
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=distributor
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: http-memberlist
              containerPort: 7946
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 300
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /var/loki-distributed-runtime
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 1024Mi
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki-distributed
                  app.kubernetes.io/instance: loki-distributed
                  app.kubernetes.io/component: distributor
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki-distributed
                    app.kubernetes.io/instance: loki-distributed
                    app.kubernetes.io/component: distributor
                topologyKey: failure-domain.beta.kubernetes.io/zone

      volumes:
        - name: config
          secret:
            secretName: loki-distributed
        - name: runtime-config
          configMap:
            name: loki-distributed-runtime
---
# Source: loki-distributed/templates/gateway/deployment-gateway.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-distributed-gateway
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: gateway
spec:
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/component: gateway
  template:
    metadata:
      annotations:
        checksum/config: cfd95d8ce3ddebb764ec61298adde475a73bd1f3d3966101636f1d54279e8309
      labels:
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/instance: loki-distributed
        app.kubernetes.io/component: gateway
    spec:
      serviceAccountName: loki-distributed

      securityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsNonRoot: true
        runAsUser: 101
      terminationGracePeriodSeconds: 30
      containers:
        - name: nginx
          image: docker.io/nginxinc/nginx-unprivileged:1.20.2-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: config
              mountPath: /etc/nginx
            - name: tmp
              mountPath: /tmp
            - name: docker-entrypoint-d-override
              mountPath: /docker-entrypoint.d
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 1024Mi
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki-distributed
                  app.kubernetes.io/instance: loki-distributed
                  app.kubernetes.io/component: gateway
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki-distributed
                    app.kubernetes.io/instance: loki-distributed
                    app.kubernetes.io/component: gateway
                topologyKey: failure-domain.beta.kubernetes.io/zone

      volumes:
        - name: config
          configMap:
            name: loki-distributed-gateway
        - name: tmp
          emptyDir: {}
        - name: docker-entrypoint-d-override
          emptyDir: {}
---
# Source: loki-distributed/templates/query-frontend/deployment-query-frontend.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-distributed-query-frontend
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query-frontend
spec:
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/component: query-frontend
  template:
    metadata:
      annotations:
        checksum/config: 8de3a2b4ecfe3365b8029218127cb8c1b3016a60c4ef39b9ac95c26776e8b4cb
      labels:
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/instance: loki-distributed
        app.kubernetes.io/component: query-frontend
    spec:
      serviceAccountName: loki-distributed

      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 30
      containers:
        - name: query-frontend
          image: docker.io/grafana/loki:2.7.3
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=query-frontend
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 300
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /var/loki-distributed-runtime
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 1024Mi
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki-distributed
                  app.kubernetes.io/instance: loki-distributed
                  app.kubernetes.io/component: query-frontend
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki-distributed
                    app.kubernetes.io/instance: loki-distributed
                    app.kubernetes.io/component: query-frontend
                topologyKey: failure-domain.beta.kubernetes.io/zone

      volumes:
        - name: config
          secret:
            secretName: loki-distributed
        - name: runtime-config
          configMap:
            name: loki-distributed-runtime
---
# Source: loki-distributed/templates/distributor/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: loki-distributed-distributor
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: distributor
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: loki-distributed-distributor
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
---
# Source: loki-distributed/templates/gateway/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: loki-distributed-gateway
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: gateway
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: loki-distributed-gateway
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
---
# Source: loki-distributed/templates/ingester/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: loki-distributed-ingester
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ingester
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: loki-distributed-ingester
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
---
# Source: loki-distributed/templates/query-frontend/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: loki-distributed-query-frontend
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query-frontend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: loki-distributed-query-frontend
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
---
# Source: loki-distributed/templates/ingester/statefulset-ingester.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki-distributed-ingester
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ingester
    app.kubernetes.io/part-of: memberlist
spec:
  podManagementPolicy: Parallel
  updateStrategy:
    rollingUpdate:
      partition: 0
  serviceName: loki-distributed-ingester-headless
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/component: ingester
  template:
    metadata:
      annotations:
        checksum/config: 8de3a2b4ecfe3365b8029218127cb8c1b3016a60c4ef39b9ac95c26776e8b4cb
      labels:
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/instance: loki-distributed
        app.kubernetes.io/component: ingester
        app.kubernetes.io/part-of: memberlist
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: loki-distributed
              app.kubernetes.io/instance: loki-distributed
              app.kubernetes.io/component: ingester

      serviceAccountName: loki-distributed

      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 300
      containers:
        - name: ingester
          image: docker.io/grafana/loki:2.7.3
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=ingester
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: http-memberlist
              containerPort: 7946
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 300
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 1024Mi
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /var/loki-distributed-runtime
            - name: data
              mountPath: /var/loki
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki-distributed
                  app.kubernetes.io/instance: loki-distributed
                  app.kubernetes.io/component: ingester
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki-distributed
                    app.kubernetes.io/instance: loki-distributed
                    app.kubernetes.io/component: ingester
                topologyKey: failure-domain.beta.kubernetes.io/zone

      volumes:
        - name: config
          secret:
            secretName: loki-distributed
        - name: runtime-config
          configMap:
            name: loki-distributed-runtime
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "10Gi"
---
# Source: loki-distributed/templates/querier/statefulset-querier.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki-distributed-querier
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: querier
    app.kubernetes.io/part-of: memberlist
spec:
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    rollingUpdate:
      partition: 0
  serviceName: loki-distributed-querier-headless
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/component: querier
  template:
    metadata:
      annotations:
        checksum/config: 8de3a2b4ecfe3365b8029218127cb8c1b3016a60c4ef39b9ac95c26776e8b4cb
      labels:
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/instance: loki-distributed
        app.kubernetes.io/component: querier
        app.kubernetes.io/part-of: memberlist
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: loki-distributed
              app.kubernetes.io/instance: loki-distributed
              app.kubernetes.io/component: querier

      serviceAccountName: loki-distributed

      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 30
      containers:
        - name: querier
          image: docker.io/grafana/loki:2.7.3
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=querier
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: http-memberlist
              containerPort: 7946
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 300
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /var/loki-distributed-runtime
            - name: data
              mountPath: /var/loki
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 1024Mi
      volumes:
        - name: config
          secret:
            secretName: loki-distributed
        - name: runtime-config
          configMap:
            name: loki-distributed-runtime
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "10Gi"
---
# Source: loki-distributed/templates/prometheusrule.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: loki-distributed
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
spec:
  groups:
    []
---
# Source: loki-distributed/templates/compactor/servicemonitor-compactor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: loki-distributed-compactor
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: compactor
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/component: compactor
  endpoints:
    - port: http
      scheme: http
---
# Source: loki-distributed/templates/distributor/servicemonitor-distributor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: loki-distributed-distributor
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: distributor
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/component: distributor
  endpoints:
    - port: http
      scheme: http
---
# Source: loki-distributed/templates/ingester/servicemonitor-ingester.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: loki-distributed-ingester
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ingester
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/component: ingester
    matchExpressions:
      - key: prometheus.io/service-monitor
        operator: NotIn
        values:
          - "false"
  endpoints:
    - port: http
      scheme: http
---
# Source: loki-distributed/templates/querier/servicemonitor-querier.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: loki-distributed-querier
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: querier
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/component: querier
    matchExpressions:
      - key: prometheus.io/service-monitor
        operator: NotIn
        values:
          - "false"
  endpoints:
    - port: http
      scheme: http
---
# Source: loki-distributed/templates/query-frontend/servicemonitor-query-frontend.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: loki-distributed-query-frontend
  labels:
    helm.sh/chart: loki-distributed-0.69.4
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: loki-distributed
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query-frontend
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/component: query-frontend
  endpoints:
    - port: http
      scheme: http
