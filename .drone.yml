# Copyright (c) 2020 SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

kind: pipeline
name: license

steps:
  - name: check
    image: docker.io/library/golang:1.16
    pull: always
    commands:
      - go get -u github.com/google/addlicense
      - addlicense -c "SIGHUP s.r.l" -v -l bsd --check .

#  - name: checklabels
#    image: openpolicyagent/conftest:v0.28.1
#    pull: always
#    commands:
#      -  conftest pull https://raw.githubusercontent.com/sighupio/ci-commons/main/conftest/kustomization/kfd-labels.rego
#      -  conftest test katalog/**/kustomization.yaml
---
kind: pipeline
name: policeman

depends_on:
  - license

platform:
  os: linux
  arch: amd64

steps:
  - name: lint
    image: quay.io/sighup/policeman
    pull: always
    environment:
      # Identifies false positives like missing 'selector'.
      # Doing this is valid for Kustomize patches
      VALIDATE_KUBERNETES_KUBEVAL: "false"
      # Some duplicated code is intended.
      VALIDATE_JSCPD: "false"
      # hadolint already validated dockerfiles
      VALIDATE_DOCKERFILE: "false"
      # Disable natural language checks
      VALIDATE_NATURAL_LANGUAGE: "false"

    depends_on:
      - clone

  - name: render
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.19.11_3.8.7_2.4.1
    pull: always
    depends_on:
      - clone
    commands:
      - kustomize build katalog/cerebro > cerebro.yml
      - kustomize build katalog/curator > curator.yml
      - kustomize build katalog/elasticsearch-triple > elasticsearch-triple.yml
      - kustomize build katalog/logging-operator > logging-operator.yml
      - kustomize build katalog/logging-operated > logging-operated.yml
      - kustomize build katalog/configs > configs.yml
      - kustomize build katalog/kibana > kibana.yml

  - &deprek8ion
    name: deprek8ion-cerebro
    image: eu.gcr.io/swade1987/deprek8ion:1.1.34
    pull: always
    environment:
      KUBERNETES_MANIFESTS: cerebro.yml
    depends_on:
      - render
    commands:
      - /conftest test -p /policies $${KUBERNETES_MANIFESTS}

  - <<: *deprek8ion
    name: deprek8ion-curator
    environment:
      KUBERNETES_MANIFESTS: curator.yml

  - <<: *deprek8ion
    name: deprek8ion-elasticsearch-triple
    environment:
      KUBERNETES_MANIFESTS: elasticsearch-triple.yml

  - <<: *deprek8ion
    name: deprek8ion-logging-operator
    environment:
      KUBERNETES_MANIFESTS: logging-operator.yml

  - <<: *deprek8ion
    name: deprek8ion-logging-operated
    environment:
      KUBERNETES_MANIFESTS: logging-operated.yml

  - <<: *deprek8ion
    name: deprek8ion-configs
    environment:
      KUBERNETES_MANIFESTS: configs.yml

  - <<: *deprek8ion
    name: deprek8ion-kibana
    environment:
      KUBERNETES_MANIFESTS: kibana.yml

---
kind: pipeline
name: unit-test

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

steps:
  - name: katalog
    image: quay.io/sighup/katalog:3.2.2_3
    pull: always
    depends_on: [ clone ]
    commands:
      - flake8 --ignore=E501 katalog/tests/test.py
      - bash katalog/tests/pytest.sh
      - rm -rf .pytest_cache katalog/tests/__pycache__
    when:
      event:
      - push

#  - name: examples
#    image: quay.io/sighup/furyctl-bats:v0.2.2_3.2.2
#    pull: always
#    depends_on: [clone]
#    commands:
#      - bats examples/tests.bats
#    when:
#      event:
#      - push

---
kind: pipeline
name: e2e-kubernetes-1.20

depends_on:
  - policeman

node:
  runner: internal

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/tags/**

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ clone ]
    settings:
      action: custom-cluster-120
      pipeline_id: cluster-120
      local_kind_config_path: katalog/tests/kind/config.yml
      cluster_version: '1.20.7'
      instance_path: /shared
      instance_size: 2-extra-large
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password

  - name: e2e
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.20.7_3.8.7_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ init ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-120
      - bats -t katalog/tests/tests.sh

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    depends_on: [ e2e ]
    settings:
      action: destroy
      pipeline_id: cluster-120
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
      - success
      - failure

volumes:
- name: shared
  temp: {}

---
kind: pipeline
name: e2e-kubernetes-1.21

depends_on:
  - policeman

node:
  runner: internal

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/tags/**

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ clone ]
    settings:
      action: custom-cluster-121
      pipeline_id: cluster-121
      local_kind_config_path: katalog/tests/kind/config.yml
      cluster_version: '1.21.1'
      instance_path: /shared
      instance_size: 2-extra-large
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password

  - name: e2e
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.21.1_3.8.7_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ init ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-121
      - bats -t katalog/tests/tests.sh

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    depends_on: [ e2e ]
    settings:
      action: destroy
      pipeline_id: cluster-121
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
      - success
      - failure

volumes:
- name: shared
  temp: {}

---
kind: pipeline
name: e2e-kubernetes-1.22

depends_on:
  - policeman

node:
  runner: internal

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/tags/**

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ clone ]
    settings:
      action: custom-cluster-122
      pipeline_id: cluster-122
      local_kind_config_path: katalog/tests/kind/config.yml
      cluster_version: '1.22.0'
      instance_path: /shared
      instance_size: 2-extra-large
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password

  - name: e2e
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.22.0_3.8.7_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ init ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-122
      - bats -t katalog/tests/tests.sh

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    depends_on: [ e2e ]
    settings:
      action: destroy
      pipeline_id: cluster-122
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
      - success
      - failure

volumes:
- name: shared
  temp: {}

---
kind: pipeline
name: e2e-kubernetes-1.23

depends_on:
  - policeman

node:
  runner: internal

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/tags/**

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ clone ]
    settings:
      action: custom-cluster-123
      pipeline_id: cluster-123
      local_kind_config_path: katalog/tests/kind/config.yml
      cluster_version: '1.23.0'
      instance_path: /shared
      instance_size: 2-extra-large
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password

  - name: e2e
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.23.0_3.8.7_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ init ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-123
      - bats -t katalog/tests/tests.sh

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.13.0
    pull: always
    depends_on: [ e2e ]
    settings:
      action: destroy
      pipeline_id: cluster-123
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
      - success
      - failure

volumes:
- name: shared
  temp: {}

---
kind: pipeline
name: release

depends_on:
  - e2e-kubernetes-1.20
  - e2e-kubernetes-1.21
  - e2e-kubernetes-1.22
  - e2e-kubernetes-1.23

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:
  - name: prepare-canonical-json
    image: registry.sighup.io/poc/fury-repo-automations:v0.0.3
    pull: always
    depends_on: [ clone ]
    commands:
      - spock module-json -m=fury-kubernetes-logging -r=False -v=${DRONE_TAG}
    when:
      ref:
        include:
          - refs/tags/**

  - name: prepare-tar-gz
    image: alpine:latest
    pull: always
    depends_on: [ clone ]
    commands:
      - tar -zcvf fury-kubernetes-logging-${DRONE_TAG}.tar.gz katalog/ LICENSE README.md
    when:
      ref:
        include:
          - refs/tags/**


  - name: prepare-release-notes
    image: quay.io/sighup/fury-release-notes-plugin:3.7_2.8.4
    pull: always
    depends_on: [ clone ]
    settings:
      release_notes_file_path: release-notes.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: publish-prerelease
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-canonical-json
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-logging-${DRONE_TAG}.tar.gz
        - fury-kubernetes-logging-canonical-definition-${DRONE_TAG}.json
      prerelease: true
      overwrite: true
      title: "Preview ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        include:
          - refs/tags/v**-rc**

  - name: publish-stable
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-canonical-json
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-logging-${DRONE_TAG}.tar.gz
        - fury-kubernetes-logging-canonical-definition-${DRONE_TAG}.json
      prerelease: false
      overwrite: true
      title: "Release ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        exclude:
          - refs/tags/v**-rc**
        include:
          - refs/tags/v**
